diff --git a/src/main.js b/src/main.js
index b002a3e..ff21b79 100644
--- a/src/main.js
+++ b/src/main.js
@@ -158,10 +158,12 @@ Events.on(engine, 'collisionStart', function(event) {
 			if (pair.bodyA === ball && pair.bodyB === goala) {
 				console.log("HIT");
 				p1stats[0]++;
+				resetstate([boxA, boxB, ball, ballb]);
 			}
 			if (pair.bodyA === ball && pair.bodyB === goalb) {
 				console.log("hit");
 				p2stats[0]++;
+				resetstate([boxA, boxB, ball, ballb]);
 				
 			}
 			
@@ -193,7 +195,7 @@ Events.on(engine, 'collisionStart', function(event) {
 		ctx.fillStyle = "#FFFFFF";
 		ctx.fillText(pad(p2stats[0], 2), 50, 100);
 		ctx.fillText(pad(p1stats[0], 2), 1075, 100);
-		
+		//ctx.fillText(boxA.angularVelocity.x, 400, 100);
 	});
 
 
@@ -204,10 +206,24 @@ function pad(num, size) {
     if(num.length < size) num = "0" + num;
     return num;
 }
-function resetstate(){
-	Matter.Body.setPosition(boxA, Matter.Vector.create(100,100));
-	Matter.Body.setPosition(boxB, Matter.Vector.create(1100,100));
-	Matter.Body.setPosition(ball, Matter.Vector.create(600,30));
-	Matter.Body.setPosition(ballb, Matter.Vector.create(600,30));
+function resetstate(x){
+	
+	Matter.Body.setPosition(x[0], Matter.Vector.create(100,100));
+	Matter.Body.setAngularVelocity(x[0], Matter.Vector.create(0,0));
+	Matter.Body.setVelocity(x[0], Matter.Vector.create(0,0));
+	
+	
+	Matter.Body.setPosition(x[1], Matter.Vector.create(1100,100));
+	//Matter.Body.setAngularVelocity(x[1], Matter.Vector.create(0,0));
+	Matter.Body.setVelocity(x[1], Matter.Vector.create(0,0));
+	
+	Matter.Body.setPosition(x[2], Matter.Vector.create(600,30));
+	//Matter.Body.setAngularVelocity(x[2], Matter.Vector.create(0,0));
+	Matter.Body.setVelocity(x[2], Matter.Vector.create(0,0));
+	
+	Matter.Body.setPosition(x[3], Matter.Vector.create(600,30));
+	//Matter.Body.setAngularVelocity(x[3], Matter.Vector.create(0,0));
+	Matter.Body.setVelocity(x[3], Matter.Vector.create(0,0));
+	
 	
 }
\ No newline at end of file
